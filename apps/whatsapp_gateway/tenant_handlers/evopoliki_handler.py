"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞ EVOPOLIKI.

–°–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ –º–µ–Ω—é –¥–ª—è —ç—Ç–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.
"""

import logging
from typing import Dict, Any

logger = logging.getLogger(__name__)


async def handle_evopoliki_menu(chat_id: str, tenant_config, sender_name: str = "–ì–æ—Å—Ç—å") -> Dict[str, Any]:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞ EVOPOLIKI.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ GreenAPI Interactive List.

    Args:
        chat_id: ID —á–∞—Ç–∞ WhatsApp
        tenant_config: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞ (TenantConfig)
        sender_name: –ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è

    Returns:
        Dict —Å —Ç–∏–ø–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    """
    logger.info(f"üè¢ [EVOPOLIKI] Generating menu for {sender_name} ({chat_id})")

    i18n = tenant_config.i18n

    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
    catalog_categories = i18n.get("buttons.catalog_categories") or []

    if not catalog_categories or len(catalog_categories) == 0:
        logger.error("‚ùå [EVOPOLIKI] catalog_categories not found or empty!")
        return {
            "type": "text",
            "message": f"üöó –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {sender_name}!\n\n‚ö†Ô∏è –ú–µ–Ω—é –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."
        }

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–µ–∫—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
    sections = []

    # –°–µ–∫—Ü–∏—è 1: –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
    catalog_rows = []
    for idx, category in enumerate(catalog_categories, start=1):
        text = category.get("text", "")
        callback_data = category.get("callback_data", "")

        # –°–æ–∑–¥–∞–µ–º row –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
        catalog_rows.append({
            "id": callback_data,  # –ù–∞–ø—Ä–∏–º–µ—Ä: "category:eva_mats"
            "title": text,  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            "description": f"–í—ã–±—Ä–∞—Ç—å {text}"
        })

    sections.append({
        "title": "üì¶ –ù–∞—à–∏ —Ç–æ–≤–∞—Ä—ã",
        "rows": catalog_rows
    })

    logger.info(f"‚úÖ [EVOPOLIKI] Generated interactive menu with {len(catalog_rows)} categories")

    return {
        "type": "interactive_list",
        "header": f"–ü—Ä–∏–≤–µ—Ç, {sender_name}! üëã",
        "body": i18n.get("start.welcome") or "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é:",
        "footer": "EVOPOLIKI - –ê–≤—Ç–æ–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞",
        "button_text": "üìã –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é",
        "sections": sections
    }


async def handle_evopoliki_list_response(
    chat_id: str,
    selected_id: str,
    tenant_config,
    session
) -> str:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∏–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–ª—è EVOPOLIKI.

    Args:
        chat_id: ID —á–∞—Ç–∞ WhatsApp
        selected_id: ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "category:eva_mats")
        tenant_config: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞
        session: AsyncSession –¥–ª—è –ë–î

    Returns:
        –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    logger.info(f"üéØ [EVOPOLIKI] User selected: {selected_id}")

    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    from ..whatsapp_handlers import handle_main_menu_choice
    from ..state_manager import set_state, WhatsAppState

    # –ü–∞—Ä—Å–∏–º selected_id
    if ":" in selected_id:
        action_type, action_value = selected_id.split(":", 1)

        if action_type == "category":
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            logger.info(f"üõí [EVOPOLIKI] Starting order flow for category: {action_value}")

            # –í—ã–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–µ—Ä–µ–∑ –µ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –ª–æ–≥–∏–∫—É
            # –ù–æ –Ω–∞–º –Ω—É–∂–Ω–æ —Å–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±–æ—Ä –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
            # –ù–∞–π–¥–µ–º –∏–Ω–¥–µ–∫—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Å–ø–∏—Å–∫–µ
            i18n = tenant_config.i18n
            catalog_categories = i18n.get("buttons.catalog_categories") or []

            # –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            for idx, category in enumerate(catalog_categories, start=1):
                if category.get("callback_data") == selected_id:
                    # –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å –Ω–æ–º–µ—Ä–æ–º –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
                    return await handle_main_menu_choice(chat_id, str(idx), tenant_config, session)

            return "‚ùå –û—à–∏–±–∫–∞: –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."

        elif action_type == "action" and action_value == "contact_manager":
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
            from ..state_manager import update_user_data

            set_state(chat_id, WhatsAppState.CONTACT_MANAGER)
            update_user_data(chat_id, {
                "application_type": "–ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–≤–æ–Ω–æ–∫"
            })

            return i18n.get("contact_manager.text") or "üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏."

    return "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ '–ú–µ–Ω—é' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞."
