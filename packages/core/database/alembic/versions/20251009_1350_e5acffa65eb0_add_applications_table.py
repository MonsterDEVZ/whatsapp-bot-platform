"""Add applications table

Revision ID: e5acffa65eb0
Revises: 20250109_0001
Create Date: 2025-10-09 13:50:30.293813+00:00

"""
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e5acffa65eb0'
down_revision: Union[str, None] = '20250109_0001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Apply database changes."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('customer_name', sa.String(length=255), nullable=False),
    sa.Column('customer_phone', sa.String(length=50), nullable=False),
    sa.Column('customer_username', sa.String(length=100), nullable=True),
    sa.Column('application_details', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.Column('manager_username', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_applications_created', 'applications', ['created_at'], unique=False)
    op.create_index('idx_applications_customer', 'applications', ['customer_id'], unique=False)
    op.create_index('idx_applications_status', 'applications', ['status'], unique=False)
    op.create_index('idx_applications_tenant', 'applications', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_applications_created_at'), 'applications', ['created_at'], unique=False)
    op.create_index(op.f('ix_applications_customer_id'), 'applications', ['customer_id'], unique=False)
    op.create_index(op.f('ix_applications_status'), 'applications', ['status'], unique=False)
    op.alter_column('body_types', 'sort_order',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('brands_slug_key'), 'brands', type_='unique')
    op.drop_index(op.f('idx_brands_name_trgm'), table_name='brands', postgresql_ops={'name': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_index(op.f('idx_brands_slug'), table_name='brands')
    op.create_index(op.f('ix_brands_slug'), 'brands', ['slug'], unique=True)
    op.drop_index(op.f('idx_models_name_trgm'), table_name='models', postgresql_ops={'name': 'gin_trgm_ops'}, postgresql_using='gin')
    op.alter_column('patterns', 'available',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('prices', 'currency',
               existing_type=sa.VARCHAR(length=3),
               server_default=None,
               existing_nullable=False)
    op.alter_column('product_categories', 'sort_order',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('product_categories', 'active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.drop_index(op.f('idx_categories_active'), table_name='product_categories', postgresql_where='(active = true)')
    op.alter_column('product_options', 'sort_order',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.drop_index(op.f('idx_tenants_active'), table_name='tenants', postgresql_where='(active = true)')
    op.drop_index(op.f('idx_tenants_slug'), table_name='tenants')
    op.drop_constraint(op.f('tenants_slug_key'), 'tenants', type_='unique')
    op.create_index(op.f('ix_tenants_slug'), 'tenants', ['slug'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Revert database changes."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tenants_slug'), table_name='tenants')
    op.create_unique_constraint(op.f('tenants_slug_key'), 'tenants', ['slug'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_tenants_slug'), 'tenants', ['slug'], unique=False)
    op.create_index(op.f('idx_tenants_active'), 'tenants', ['id'], unique=False, postgresql_where='(active = true)')
    op.alter_column('product_options', 'sort_order',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.create_index(op.f('idx_categories_active'), 'product_categories', ['id'], unique=False, postgresql_where='(active = true)')
    op.alter_column('product_categories', 'active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.alter_column('product_categories', 'sort_order',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('prices', 'currency',
               existing_type=sa.VARCHAR(length=3),
               server_default=sa.text("'KGS'::character varying"),
               existing_nullable=False)
    op.alter_column('patterns', 'available',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.create_index(op.f('idx_models_name_trgm'), 'models', ['name'], unique=False, postgresql_ops={'name': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_index(op.f('ix_brands_slug'), table_name='brands')
    op.create_index(op.f('idx_brands_slug'), 'brands', ['slug'], unique=False)
    op.create_index(op.f('idx_brands_name_trgm'), 'brands', ['name'], unique=False, postgresql_ops={'name': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_unique_constraint(op.f('brands_slug_key'), 'brands', ['slug'], postgresql_nulls_not_distinct=False)
    op.alter_column('body_types', 'sort_order',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.drop_index(op.f('ix_applications_status'), table_name='applications')
    op.drop_index(op.f('ix_applications_customer_id'), table_name='applications')
    op.drop_index(op.f('ix_applications_created_at'), table_name='applications')
    op.drop_index('idx_applications_tenant', table_name='applications')
    op.drop_index('idx_applications_status', table_name='applications')
    op.drop_index('idx_applications_customer', table_name='applications')
    op.drop_index('idx_applications_created', table_name='applications')
    op.drop_table('applications')
    # ### end Alembic commands ###
