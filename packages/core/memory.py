"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—É—é –ø–∞–º—è—Ç—å –¥–ª—è AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞, –ø–æ–∑–≤–æ–ª—è—è –±–æ—Ç—É
"–ø–æ–º–Ω–∏—Ç—å" –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∞–≤–∞—Ç—å —Å–≤—è–∑–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã.
"""

from typing import List, Dict, Optional
from datetime import datetime
import logging

logger = logging.getLogger(__name__)


class DialogMemory:
    """
    In-memory —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤.

    –•—Ä–∞–Ω–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
    —á—Ç–æ–±—ã AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –º–æ–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö
    —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤.

    Attributes:
        max_messages: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        _storage: –°–ª–æ–≤–∞—Ä—å —Å –∏—Å—Ç–æ—Ä–∏—è–º–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –ø–æ chat_id
        _last_activity: –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    """

    def __init__(self, max_messages: int = 6):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∏–∞–ª–æ–≥–æ–≤.

        Args:
            max_messages: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏
                         (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 6 = 3 –ø–∞—Ä—ã –≤–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç)
        """
        self.max_messages = max_messages
        self._storage: Dict[str, List[Dict[str, str]]] = {}
        self._last_activity: Dict[str, datetime] = {}
        logger.info(f"‚úÖ DialogMemory initialized (max_messages={max_messages})")

    def add_message(self, chat_id: str, role: str, content: str) -> None:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç max_messages, —É–¥–∞–ª—è–µ—Ç —Å–∞–º—ã–µ —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.

        Args:
            chat_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            role: –†–æ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è ("user" –∏–ª–∏ "assistant")
            content: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        """
        if chat_id not in self._storage:
            self._storage[chat_id] = []

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        self._storage[chat_id].append({
            "role": role,
            "content": content
        })

        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏
        if len(self._storage[chat_id]) > self.max_messages:
            # –£–¥–∞–ª—è–µ–º —Å–∞–º—ã–µ —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            self._storage[chat_id] = self._storage[chat_id][-self.max_messages:]

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        self._last_activity[chat_id] = datetime.now()

        logger.debug(
            f"üí¨ Added message to history for {chat_id}: "
            f"role={role}, content_length={len(content)}, "
            f"history_size={len(self._storage[chat_id])}"
        )

    def get_history(self, chat_id: str) -> List[Dict[str, str]]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        Args:
            chat_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        Returns:
            –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ [{"role": "...", "content": "..."}, ...]
            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç
        """
        history = self._storage.get(chat_id, [])
        logger.debug(f"üìñ Retrieved history for {chat_id}: {len(history)} messages")
        return history

    def clear_history(self, chat_id: str) -> None:
        """
        –û—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start –∏–ª–∏ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.

        Args:
            chat_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        if chat_id in self._storage:
            del self._storage[chat_id]
            logger.info(f"üóëÔ∏è  Cleared history for {chat_id}")
        else:
            logger.debug(f"‚ÑπÔ∏è  No history to clear for {chat_id}")

        # –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if chat_id in self._last_activity:
            del self._last_activity[chat_id]

    def get_last_activity(self, chat_id: str) -> Optional[datetime]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        Args:
            chat_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        Returns:
            –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–ª–∏ None, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
        """
        return self._last_activity.get(chat_id)

    def check_timeout(self, chat_id: str, timeout_seconds: int = 900) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∏—Å—Ç–µ–∫ –ª–∏ —Ç–∞–π–º–∞—É—Ç —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        Args:
            chat_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            timeout_seconds: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
                           (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 900 = 15 –º–∏–Ω—É—Ç)

        Returns:
            True –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞, False –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π
        """
        last_activity = self.get_last_activity(chat_id)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, —Ç–∞–π–º–∞—É—Ç–∞ –Ω–µ—Ç
        if not last_activity:
            return False

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Ç–∞–π–º–∞—É—Ç–∞
        elapsed_seconds = (datetime.now() - last_activity).total_seconds()
        timed_out = elapsed_seconds > timeout_seconds

        if timed_out:
            logger.info(
                f"‚è±Ô∏è  Session timeout for {chat_id}: "
                f"{int(elapsed_seconds)}s elapsed (limit: {timeout_seconds}s)"
            )

        return timed_out

    def get_formatted_context(self, chat_id: str) -> str:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –≤ –≤–∏–¥–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç AI.

        Args:
            chat_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        Returns:
            –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π –¥–∏–∞–ª–æ–≥–∞
        """
        history = self.get_history(chat_id)

        if not history:
            return ""

        context_lines = ["–ö–û–ù–¢–ï–ö–°–¢ –ü–†–ï–î–´–î–£–©–ï–ì–û –î–ò–ê–õ–û–ì–ê:"]
        for msg in history:
            role_label = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" if msg["role"] == "user" else "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç"
            context_lines.append(f"{role_label}: {msg['content']}")

        context_lines.append("\n–£—á–∏—Ç—ã–≤–∞–π —ç—Ç–æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å.")

        return "\n".join(context_lines)

    def get_stats(self) -> Dict[str, int]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏.

        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ç.–¥.)
        """
        return {
            "active_users": len(self._storage),
            "total_messages": sum(len(history) for history in self._storage.values()),
            "tracked_sessions": len(self._last_activity)
        }


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä DialogMemory
_global_memory: Optional[DialogMemory] = None


def init_memory(max_messages: int = 6) -> DialogMemory:
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä DialogMemory.

    Args:
        max_messages: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏

    Returns:
        –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä DialogMemory
    """
    global _global_memory
    _global_memory = DialogMemory(max_messages=max_messages)
    return _global_memory


def get_memory() -> DialogMemory:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä DialogMemory.

    Returns:
        –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä DialogMemory

    Raises:
        RuntimeError: –ï—Å–ª–∏ –ø–∞–º—è—Ç—å –Ω–µ –±—ã–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
    """
    if _global_memory is None:
        raise RuntimeError(
            "DialogMemory –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. "
            "–í—ã–∑–æ–≤–∏—Ç–µ init_memory() –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º get_memory()."
        )
    return _global_memory
