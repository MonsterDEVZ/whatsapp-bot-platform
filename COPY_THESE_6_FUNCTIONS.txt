════════════════════════════════════════════════════════════════════════════════
ИНСТРУКЦИЯ: Для каждой функции нажми "+ Add function" и вставь ВЕСЬ блок JSON ниже
════════════════════════════════════════════════════════════════════════════════


════════════════════════════════════════════════════════════════════════════════
ФУНКЦИЯ 1 из 6 - Копируй ВСЁ что ниже (включая фигурные скобки):
════════════════════════════════════════════════════════════════════════════════

{
  "name": "get_available_categories",
  "description": "Возвращает список всех доступных категорий товаров. Используй эту функцию в начале диалога, чтобы предложить клиенту выбрать категорию (EVA-коврики, 3D коврики, Чехлы и т.д.). Функция возвращает список строк с названиями на русском языке.",
  "strict": true,
  "parameters": {
    "type": "object",
    "properties": {
      "tenant_id": {
        "type": "integer",
        "description": "ID арендатора. Используй 1 для EVOPOLIKI, 2 для 5DELUXE. Обычно определяется автоматически из контекста."
      }
    },
    "additionalProperties": false,
    "required": ["tenant_id"]
  }
}


════════════════════════════════════════════════════════════════════════════════
ФУНКЦИЯ 2 из 6 - Копируй ВСЁ что ниже:
════════════════════════════════════════════════════════════════════════════════

{
  "name": "get_available_brands",
  "description": "Возвращает список марок автомобилей, доступных для выбранной категории товара. Используй эту функцию после того, как клиент выбрал категорию, чтобы показать ему список марок автомобилей. Функция возвращает отсортированный список названий марок на английском языке (например: Audi, BMW, Mercedes-Benz, Toyota). ВАЖНО: Вызывай эту функцию ТОЛЬКО когда категория уже известна.",
  "strict": true,
  "parameters": {
    "type": "object",
    "properties": {
      "category_code": {
        "type": "string",
        "description": "Код категории товара. Возможные значения: 'eva_mats' (EVA-коврики), '3d_mats' (3D коврики), 'seat_covers' (Чехлы), 'organizers' (Органайзеры). Используй код, соответствующий выбранной клиентом категории.",
        "enum": ["eva_mats", "3d_mats", "seat_covers", "organizers"]
      },
      "tenant_id": {
        "type": "integer",
        "description": "ID арендатора (1 для EVOPOLIKI, 2 для 5DELUXE)"
      }
    },
    "additionalProperties": false,
    "required": ["category_code", "tenant_id"]
  }
}


════════════════════════════════════════════════════════════════════════════════
ФУНКЦИЯ 3 из 6 - Копируй ВСЁ что ниже:
════════════════════════════════════════════════════════════════════════════════

{
  "name": "get_available_models",
  "description": "Возвращает список моделей для выбранной марки автомобиля и категории товара. Используй эту функцию после того, как клиент выбрал марку автомобиля, чтобы показать ему список доступных моделей. Функция возвращает только те модели, для которых есть лекала в базе данных. Если список пустой, это означает что для данной марки нет доступных моделей, и клиенту нужно предложить индивидуальный замер. ВАЖНО: Вызывай эту функцию ТОЛЬКО когда категория и марка уже известны.",
  "strict": true,
  "parameters": {
    "type": "object",
    "properties": {
      "brand_name": {
        "type": "string",
        "description": "Точное название марки автомобиля на английском языке. Примеры: 'Toyota', 'BMW', 'Mercedes-Benz'. Используй название из списка, полученного от get_available_brands."
      },
      "category_code": {
        "type": "string",
        "description": "Код категории товара (eva_mats, 3d_mats, seat_covers, organizers)",
        "enum": ["eva_mats", "3d_mats", "seat_covers", "organizers"]
      },
      "tenant_id": {
        "type": "integer",
        "description": "ID арендатора (1 для EVOPOLIKI, 2 для 5DELUXE)"
      }
    },
    "additionalProperties": false,
    "required": ["brand_name", "category_code", "tenant_id"]
  }
}


════════════════════════════════════════════════════════════════════════════════
ФУНКЦИЯ 4 из 6 - Копируй ВСЁ что ниже:
════════════════════════════════════════════════════════════════════════════════

{
  "name": "search_patterns",
  "description": "КРИТИЧЕСКИ ВАЖНЫЙ инструмент! Проверяет, есть ли в базе данных лекала (шаблоны для производства) для указанной комбинации марка + модель + категория товара. Возвращает 'FOUND' если лекала есть (заказ можем выполнить сразу), или 'NOT_FOUND' если лекал нет (нужен индивидуальный замер). КОГДА ИСПОЛЬЗОВАТЬ: Вызывай эту функцию СРАЗУ после того, как узнал марку, модель и категорию товара от клиента. Это позволит определить дальнейший сценарий диалога. ВАЖНО: Если функция вернула 'NOT_FOUND', не предлагай клиенту продолжить выбор опций, а сразу предложи индивидуальный замер.",
  "strict": true,
  "parameters": {
    "type": "object",
    "properties": {
      "brand_name": {
        "type": "string",
        "description": "Точное название марки автомобиля, например 'Toyota', 'BMW'"
      },
      "model_name": {
        "type": "string",
        "description": "Точное название модели автомобиля. Примеры: 'Camry', 'Camry 70', 'X5', 'E-Class'. Используй название из списка, полученного от get_available_models, или название, которое указал клиент."
      },
      "category_code": {
        "type": "string",
        "description": "Код категории товара (eva_mats, 3d_mats, seat_covers, organizers)",
        "enum": ["eva_mats", "3d_mats", "seat_covers", "organizers"]
      },
      "tenant_id": {
        "type": "integer",
        "description": "ID арендатора (1 для EVOPOLIKI, 2 для 5DELUXE)"
      }
    },
    "additionalProperties": false,
    "required": ["brand_name", "model_name", "category_code", "tenant_id"]
  }
}


════════════════════════════════════════════════════════════════════════════════
ФУНКЦИЯ 5 из 6 - Копируй ВСЁ что ниже:
════════════════════════════════════════════════════════════════════════════════

{
  "name": "calculate_price",
  "description": "Рассчитывает итоговую цену заказа на основе модели автомобиля, категории товара и выбранных клиентом опций. Возвращает детальную разбивку цены: базовая цена, цена опций, итоговая сумма. КОГДА ИСПОЛЬЗОВАТЬ: Вызывай эту функцию после того, как: 1) search_patterns вернула 'FOUND' (лекала найдены), 2) клиент выбрал опции (например, 'с бортами' или 'без бортов'). НЕ вызывай эту функцию, если лекал нет (NOT_FOUND) - в этом случае цена рассчитывается индивидуально менеджером.",
  "strict": true,
  "parameters": {
    "type": "object",
    "properties": {
      "brand_name": {
        "type": "string",
        "description": "Название марки автомобиля, например 'Toyota'"
      },
      "model_name": {
        "type": "string",
        "description": "Название модели автомобиля, например 'Camry 70'"
      },
      "category_code": {
        "type": "string",
        "description": "Код категории товара",
        "enum": ["eva_mats", "3d_mats", "seat_covers", "organizers"]
      },
      "options": {
        "type": "object",
        "description": "Словарь выбранных клиентом опций. Ключи - коды опций, значения - boolean (True если выбрано, False если нет). Возможные опции: 'with_borders' (с бортами/без бортов), 'third_row' (третий ряд для внедорожников 7 мест). Пример: {\"with_borders\": true, \"third_row\": false}",
        "properties": {
          "with_borders": {
            "type": "boolean",
            "description": "True если клиент выбрал вариант 'с бортами', False если 'без бортов'"
          },
          "third_row": {
            "type": "boolean",
            "description": "True если нужен третий ряд (для 7-местных авто), False если нет"
          }
        },
        "additionalProperties": false,
        "required": ["with_borders", "third_row"]
      },
      "tenant_id": {
        "type": "integer",
        "description": "ID арендатора (1 для EVOPOLIKI, 2 для 5DELUXE)"
      }
    },
    "additionalProperties": false,
    "required": ["brand_name", "model_name", "category_code", "options", "tenant_id"]
  }
}


════════════════════════════════════════════════════════════════════════════════
ФУНКЦИЯ 6 из 6 (ФИНАЛЬНАЯ!) - Копируй ВСЁ что ниже:
════════════════════════════════════════════════════════════════════════════════

{
  "name": "create_airtable_lead",
  "description": "🎯 ФИНАЛЬНЫЙ ИНСТРУМЕНТ! Создает заявку (лид) в Airtable с полными данными заказа клиента. Это завершающий шаг продажи - после создания заявки менеджер компании получит уведомление и свяжется с клиентом для подтверждения заказа и организации доставки/установки. КОГДА ИСПОЛЬЗОВАТЬ: Вызывай эту функцию ТОЛЬКО после того, как собрал ВСЕ данные: 1️⃣ Категорию товара (через get_available_categories) 2️⃣ Марку и модель автомобиля (через get_available_brands, get_available_models) 3️⃣ Проверил наличие лекал (через search_patterns → должно быть 'FOUND') 4️⃣ Узнал опции клиента (с бортами / без бортов и т.д.) 5️⃣ Рассчитал цену (через calculate_price) 6️⃣ Узнал имя клиента. ВАЖНО: НЕ вызывай эту функцию, если у тебя нет ВСЕХ данных! НЕ спрашивай у клиента номер телефона - он уже есть в chat_id! chat_id автоматически передается системой (формат: '996555123456@c.us'). После успешного создания заявки функция вернет сообщение для клиента - передай его клиенту как есть.",
  "strict": true,
  "parameters": {
    "type": "object",
    "properties": {
      "tenant_id": {
        "type": "integer",
        "description": "ID арендатора (1 для EVOPOLIKI, 2 для 5DELUXE). Обычно определяется автоматически из контекста."
      },
      "chat_id": {
        "type": "string",
        "description": "ID чата WhatsApp пользователя в формате '996555123456@c.us'. Из этого ID автоматически извлекается номер телефона клиента. ВАЖНО: Этот параметр ВСЕГДА доступен автоматически - используй переменную chat_id из контекста диалога!"
      },
      "client_name": {
        "type": "string",
        "description": "Имя клиента для заявки. Примеры: 'Иван', 'Мария', 'Азамат', 'Жанара'. Попроси клиента назвать имя, если он его еще не сообщил. Достаточно только имени, без фамилии."
      },
      "category_name": {
        "type": "string",
        "description": "Название категории товара на русском языке. Примеры: 'EVA-коврики', '3D коврики', 'Чехлы', 'Органайзеры'. Используй точное название, которое вернула функция get_available_categories."
      },
      "brand_name": {
        "type": "string",
        "description": "Марка автомобиля на английском языке. Примеры: 'Toyota', 'BMW', 'Mercedes-Benz', 'Lexus', 'Nissan'. Используй точное название из списка get_available_brands."
      },
      "model_name": {
        "type": "string",
        "description": "Модель автомобиля. Примеры: 'Camry 70', 'X5', 'E-Class', 'RX 350', 'Qashqai'. Используй точное название из списка get_available_models."
      },
      "options": {
        "type": "string",
        "description": "Текстовое описание выбранных клиентом опций. Примеры: 'С бортами 5 см', 'Без бортов', 'С бортами, третий ряд', 'Без бортов, второй ряд'. Сформируй читаемое описание на основе того, что выбрал клиент (опции из calculate_price)."
      },
      "price": {
        "type": "number",
        "description": "Итоговая цена заказа в сомах (KGS). Примеры: 3000.0, 4500.0, 2800.0. ВАЖНО: Используй цену из поля 'total_price', которую вернула функция calculate_price."
      }
    },
    "additionalProperties": false,
    "required": ["tenant_id", "chat_id", "client_name", "category_name", "brand_name", "model_name", "options", "price"]
  }
}


════════════════════════════════════════════════════════════════════════════════
✅ ВСЕ 6 ФУНКЦИЙ ДОБАВЛЕНЫ!
════════════════════════════════════════════════════════════════════════════════

Теперь:
1. Нажми "Save" в OpenAI Platform
2. Обновите Instructions (промпт) из файла NEW_ASSISTANT_PROMPT_EVOPOLIKI.md
